name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Run clippy
      run: cargo clippy -- -D warnings

  sast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Cache cargo tools
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin/cargo-audit
          ~/.cargo/bin/cargo-deny
        key: ${{ runner.os }}-cargo-tools-${{ hashFiles('**/Cargo.lock') }}
    - name: Install cargo-audit
      run: cargo install cargo-audit --locked --force
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Install cargo-deny
      run: cargo install cargo-deny --locked --force
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Run cargo-audit
      run: cargo audit
    - name: Run cargo-deny
      run: cargo deny check
